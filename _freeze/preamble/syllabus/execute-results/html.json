{
  "hash": "c7d39630ed863121582830824532259c",
  "result": {
    "engine": "knitr",
    "markdown": "# Course syllabus {#sec-syllabus}\n\n\n\n\n\n\n\n\n\nReproducibility and open scientific practices are increasingly in demand\nand needed by scientists and researchers in modern research\nenvironments. Our work often require or involve a high level of hands-on\ncollaboration on scientific projects throughout all stages of the\nresearch lifecycle. We are faced with obstacles that we have no training\nfor nor knowledge on how to address. Obstacles, that can be as simple as\nnot having a shared way of writing code or managing files, can impede\neffective collaboration. Or they can be complex, like documenting\nsoftware dependencies or steps in an analysis pipeline in a way that\nmakes it easy to resolve issues and get the most recent set of results\nafter collaborators have worked on a project. Aside from the impact on\ncollaboration, these barriers can even affect projects with just one\nprimary researcher. Ultimately, this can have consequences on the\nreliability and reproducibility of scientific results, especially\nconsidering that the measures taken to address these barriers are often\nnot explicitly shared in classical science output (like a publication).\n\nWith this course, we aim to begin addressing this gap. By using a highly\npractical, hands-on approach that revolves around code-along sessions\n(instructor and learner coding together), reading activities, and\nhands-on exercises, our overarching **learning outcome** is that at the\nend of the course, participants will be able to:\n\n> Describe what an open, collaborator-friendly, and nearly-automated\n> reproducible data analysis pipeline and workflow looks like, and then\n> create a project that follows these concepts by using R.\n\nOur specific **learning objectives** are to:\n\n1.  Identify potential actions to streamline collaboration on a data\n    analysis project and create projects that apply many of these\n    actions using R.\n\n2.  Describe and define the distinct steps involved in a pipeline that\n    goes from raw data to final results, and to use R to build this\n    pipeline in an automated and explicit way.\n\n3.  Apply functional programming concepts to run statistical analyses\n    that fit within the conceptual framework of automated pipelines and\n    that can be used regardless of what statistical method is used.\n\nAnd we **will not** learn:\n\n-   Any details on or about specific statistical methods or models\n    (these are already covered by most university curriculum). We cover\n    how to run statistical methods, but not which statistical methods to\n    use for your data or project.\n-   Making figures or plots (data visualization could be a whole course\n    on its own).\n\nBecause learning and coding is ultimately not *just* a solo activity,\nduring this course we also aim to provide opportunities to chat with\nfellow participants, learn about their work and how they do analyses,\nand to build networks of support and collaboration.\n\nThe specific software and technologies we will cover in this course are\nR, RStudio, Git, GitHub, and Quarto, while the specific R packages are\n`{styler}`, `{targets}`, and several of the `{tidymodels}`\npackages.\n\n## Is this course for you?\n\nThis course is designed in a specific way and is ideal for you if:\n\n-   You are a researcher, preferably working in the biomedical field\n    (ranging from experimental to epidemiological). Specifically, this\n    course targets those working on topics in diabetes and metabolism.\n-   You currently do quantitative data analysis.\n-   You preferably:\n    -   have taken the [intermediate Reproducible Research in R\n        course](https://r-cubed-intermediate.rostools.org/), as this\n        course is a natural extension to that one;\n    -   know a *moderate* or more amount of R (or computing in general);\n    -   know how to use R and are fairly familiar with the\n        `{tidyverse}`, `{rmarkdown}`, [RStudio](https://rstudio.com/),\n        [Git](https://git-scm.com/), and [GitHub](https://github.com/).\n\nConsidering that this is a natural extension of the\n[introductory](https://r-cubed-intro.rostools.org/) and\n[intermediate](https://r-cubed-intermediate.rostools.org/) r-cubed\ncourses, this course builds on the knowledge and skills learned during\nthose courses, including Git, RStudio R Projects, functions, functional\nprogramming, and Quarto / R Markdown. If you *do not* have familiarity\nwith these tools, you will need to go over the material from the\nintroductory and intermediate courses beforehand (more details about\npre-course tasks will be sent out a couple of weeks before the course).\n\nWhile having these assumptions help to focus the content of the course,\nif you have an interest in learning R but don't fit any of the above\nassumptions, **you are still welcome to attend the course**! We welcome\neveryone, that is until the course capacity is reached.\n",
    "supporting": [
      "syllabus_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}