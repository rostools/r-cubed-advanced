{
  "hash": "2370d001c58407d934f54bf37b871540",
  "result": {
    "engine": "knitr",
    "markdown": "---\nexecute:\n  eval: false\n---\n\n\n\n\n# Pre-course tasks {#sec-pre-course}\n\nIn order to participate in this course, you must complete the pre-course\ntasks in this section as well as **completing the\n[survey](https://docs.google.com/forms/d/e/1FAIpQLSfzTLrLFyQHj79YGaCQDN5fUZ_9et1qdmtDGiq6gNPGzFSCyQ/viewform?usp=sf_link)**\nat the end. These tasks are designed to make it easier for everyone to\nstart the course with everything ready to go. For some of the tasks, you\nmight not understand why you need to do them, but you will likely\nunderstand why once the course begins.\n\nDepending on your skills and knowledge, these tasks could take between\n**5-7 hrs to finish**, so we suggest planning a full day to complete\nthem. Depending on your institution and how they handle installing\nsoftware on work computers, you also might have to contact IT *very\nearly* to make sure everything is properly installed and set up.\n\n## List of tasks\n\nHere's a quick overview of the tasks you need to do. Specific details\nabout them are found as you work through this section.\n\n1.  Read the learning objectives in @sec-pre-course-learning-objectives\n    for the pre-course tasks.\n2.  Read about how to read this website in @sec-reading-website.\n3.  Install the necessary programs and the right versions of those\n    programs in @sec-install-programs. For some people, depending on\n    their institution, this task can take the **longest amount of time**\n    because you have to contact your IT to install these packages.\n4.  Install the necessary R packages in @sec-install-r-packages.\n5.  Correctly set up Git on your computer in @sec-setup-git, if you\n    haven't done this already from previous courses. If you haven't used\n    Git before, this task could take a while because of the reading.\n6.  Run a check with `r3::check_setup()` to see if everything works.\n    You'll later need to paste this output into the survey.\n7.  Connect your computer with GitHub in @sec-connect-github.\n8.  Create an R Project in @sec-create-project, along with the folder\n    and file setup.\n9.  Create an Quarto file.\n10. Write (well, mostly copy and paste) R code to download the data and\n    save it to your computer. This task will probably take up maybe\n    30-60 minutes depending on your interest of exploring the data.\n11. Run a check using `r3::check_project_setup_advanced()` to see that\n    everything is as expected. You'll later need to paste this output\n    into the survey.\n12. Set some options in RStudio in @sec-quality-of-life.\\\n13. Read about the basic course details in @sec-course-details.\n14. Read the syllabus in @sec-syllabus.\n15. Read the [Code of\n    Conduct](https://guides.rostools.org/conduct.html).\n16. **Complete the pre-course\n    [survey](https://docs.google.com/forms/d/e/1FAIpQLSfzTLrLFyQHj79YGaCQDN5fUZ_9et1qdmtDGiq6gNPGzFSCyQ/viewform?usp=sf_link)**.\n    This survey is pretty quick, maybe \\~10 minutes.\n\nCheck each section for exact details on completing these tasks.\n\n## Learning objective {#sec-pre-course-learning-objectives}\n\nIn general, these pre-course tasks are meant to help prepare you for the\ncourse and make sure everything is setup properly so the first session\nruns smoothly. However, some of these tasks are meant for learning as\nwell as for general setup, so we have defined the following learning\nobjectives for this page:\n\n1.  Learn about and then apply some basic reproducible workflows and\n    setups for the initial processing of raw data. For those who have\n    already participated in the [intermediate R\n    course](https://r-cubed-intermediate.rostools.org/), the objective\n    is to review what you previously learned.\n\n## Reading the course website {#sec-reading-website}\n\n\n\n\n::: {.cell layout-align=\"center\"}\nWe will explain this a bit during the course, but read this to start\nlearning how the website is structured and how to read certain things.\nSpecifically, there are a few \"syntax\" type formatting of the text in\nthis website to be aware of:\n\n-   Folder names always end with a `/`, for example `data/` means the\n    data folder.\n-   R variables are always shown as is. For instance, for the code\n    `x <- 10`, `x` is a variable because it was assigned with 10.\n-   Functions always end with `()`, for instance `mean()` or\n    `read_csv()`.\n-   Sometimes functions have their package name appended with `::` to\n    indicate to run the code from the specific package, since we likely\n    haven't loaded the package with `library()`. For instance, to\n    install packages from GitHub using the `{pak}` package we use\n    `pak::pkg_install(\"user/packagename\")`. You'll learn about this more\n    later.\n-   Reading tasks always start with a statement \"Reading task\" and are\n    enclosed in a \"callout block\". Read within this block. We will\n    usually go over the section again to reinforce the concepts and\n    address any questions.\n:::\n\n\n\n\n## Installing the latest programs {#sec-install-programs}\n\n\n\n\n::: {.cell layout-align=\"center\"}\nThe first thing to do is to install these programs. You may already have\nsome of them installed and if you do, please make sure that they are at\nleast the minimum versions listed below. If not, you will need to update\nthem.\n\n::: panel-tabset\n### Windows\n\n1.  [R](https://cloud.r-project.org/bin/windows/base/): Any version\n    above `4.1.2`. If you have used R before, you can confirm the\n    version by running `R.version.string` in the Console.\n2.  [RStudio](https://www.rstudio.com/products/rstudio/download/#download):\n    Any version above `v2021.09.0+351`. If you have installed it before,\n    check the current version by going to the menu\n    `Help -> About RStudio`.\n3.  [Git](https://git-scm.com/download/win): Select the \"Click here for\n    download\" link. Git is used throughout many sessions in the courses.\n    When installing, it will ask for a selecting a \"Text Editor\" and\n    while we won't be using this in the course, Git needs to know this\n    information so choose Notepad.\n4.  [Rtools](https://cran.r-project.org/bin/windows/Rtools/): Version\n    that says \"R-release\". Rtools is needed in order to build some R\n    packages. For some computers, installing Rtools can take some time.\n\n### MacOS\n\n1.  [R](https://cloud.r-project.org/bin/macosx/): Any version above\n    `4.1.2`. If you have used R before, you can confirm the version by\n    running `R.version.string` in the Console. If you use\n    [Homebrew](https://brew.sh/), installing R is as easy as opening a\n    Terminal and running:\n\n    ``` bash\n    brew install --cask r\n    ```\n\n2.  [RStudio](https://www.rstudio.com/products/rstudio/download/#download):\n    Any version above `v2021.09.0+351`. If you have installed it before,\n    check the current version by going to the menu\n    `Help -> About RStudio`. With Homebrew:\n\n    ``` bash\n    brew install --cask rstudio\n    ```\n\n3.  [Git](https://git-scm.com/download/mac): Git is used throughout many\n    sessions in the courses. With Homebrew:\n\n    ``` bash\n    brew install git\n    ```\n\n### Linux (Ubuntu)\n\n1.  [R](https://cloud.r-project.org/bin/linux/ubuntu/): Any version\n    above `4.1.2`. If you have used R before, you can confirm the\n    version by running `R.version.string` in the Console.\n\n    ``` bash\n    sudo apt -y install r-base\n    ```\n\n2.  [RStudio](https://www.rstudio.com/products/rstudio/download/#download):\n    Any version above `v2021.09.0+351`. If you have installed it before,\n    check the current version by going to the menu\n    `Help -> About RStudio`.\n\n3.  [Git](https://git-scm.com/download/mac): Git is used throughout many\n    sessions in the courses.\n\n    ``` bash\n    sudo apt install git\n    ```\n:::\n\nAll these programs are required for the course, even Git. Git, which is\na software program to formally manage versions of files, is used because\nof it's popularity and the amount of documentation available for it. At\nthe end of the course, you will be using Git and GitHub to manage your\ngroup assignment. Check out the online book [Happy Git with\nR](https://happygitwithr.com/), especially the \"Why Git\" section, for an\nunderstanding on why we are teaching Git. Windows users tend to have\nmore trouble with installing Git than macOS or Linux users. See the\nsection on [Installing Git for\nWindows](https://happygitwithr.com/install-git.html#install-git-windows)\nfor help.\n\n::: {.callout-note appearance=\"default\"}\nSome pictures may show a Git pane in RStudio, but you may not see it. If\nyou haven't created or opened an RStudio R Project (which is taught in\nthe introductory course), the Git pane *does not* show up. It only shows\nup in R Projects that use Git to track file changes.\n:::\n\n::: {.callout-note appearance=\"default\"}\n*A note to those who have or use work laptops with restrictive\nadministrative privileges*: You may encounter problems installing\nsoftware due to administrative reasons (e.g. you don't have permission\nto install things). Even if you have issues installing or updating the\nlatest version of R or RStudio, you will likely be able to continue with\nthe course as long as you have the minimum version listed above for R\nand for RStudio. If you have versions of R and RStudio that are older\nthan that, you may need to ask your IT department to update your\nsoftware if you can't do this yourself. Unfortunately, Git is not a\ncommonly used software for some organizations, so you may not have it\ninstalled and you *will* need to ask IT to install it. We *require* it\nfor the course, so please make sure to give IT enough time to be able to\ninstall it for you prior to the course.\n:::\n\nOnce R, RStudio, and Git have been installed, open RStudio. *If you\nencounter any troubles during these pre-course tasks*, try as best as\nyou can to complete the task and then let us know about the issues in\nthe pre-course survey of the course. If you continue having problems,\nindicate on the survey that you need help and we can try to book a quick\nvideo call to fix the problem. Otherwise, you can come to the course\n15-20 minutes earlier to get help.\n\nIf you're unable to complete the setup procedure due to unfixable\ntechnical issues, you can use Posit Cloud (to use RStudio on the cloud)\nas a final solution in order to participate in the course. For help\nsetting up Posit Cloud for this course, refer to the [Posit Cloud setup\nguide](https://guides.rostools.org/posit-cloud).\n:::\n\n\n\n\n## Installing the R packages {#sec-install-r-packages}\n\n\n\n\n::: {.cell layout-align=\"center\"}\nWe will be using specific R packages for the course, so you will need to\ninstall them. A detailed walkthrough for installing the necessary\npackages is available on the [pre-course tasks for installing\npackages](https://r-cubed-intro.rostools.org/preamble/pre-course.html#installing-r-packages)\nsection of the introduction course, however, you only need to install\nthe r3 helper package in order to install all the necessary packages by\nrunning these commands in the R Console:\n\n1.  Install the `{pak}` package:\n\n    ``` r\n    install.packages(\"pak\")\n    ```\n\n2.  Install the r3 helper package for this course:\n\n    ``` r\n    pak::pak(\"rostools/r3\")\n    ```\n\n3.  Install the necessary packages for the course:\n\n    ``` r\n    r3::install_packages_advanced()\n    ```\n\n::: {.callout-warning appearance=\"default\"}\nYou might encounter an error when running this code. That's ok, you can\nfix it if you restart R by going to `Sessions -> Restart R` and re-run\nthe code in items 2 and 3, it should work. If it still doesn't, try to\nrunning:\n\n``` r\nremotes::install_github(\"rostools/r3\")\n```\n\nIf that also doesn't work, try to complete the other tasks, complete the\nsurvey, and let us know you have a problem in the survey.\n:::\n\n*Note*: When you see a command like `something::something()`, for\nexample with `r3::install_packages_advanced()`, you would \"read\" this as:\n\n> R, can you please use the `install_packages_advanced()` function from the r3\n> package.\n\nThe normal way of doing this would be to load the package with\n`library(r3)` and then running the command (`install_packages_advanced()`).\nBut by using the `::`, we tell R to directly use a function from a\npackage, without needing to load the package and all of its other\nfunctions too. We use this trick because we only want to use the\n`install_packages_advanced()` command from the r3 package and not have to load\nall the other functions as well. In this course we will be using `::`\noften.\n:::\n\n\n\n\n## Setting up Git {#sec-setup-git}\n\nSince Git has already been covered in the previous courses, we won't\ncover *learning it* during this course. However, since version control\nis a fundamental component of any modern data analysis workflow and\n*should be used*, we **will be using it throughout the course**. If you\nhave used or currently use Git and GitHub, you can skip these two tasks.\nIf you *have not* used it, please do these tasks:\n\n1.  Follow the [pre-course tasks for Git and\n    GitHub](https://r-cubed-intro.rostools.org/preamble/pre-course.html#setting-up-git-and-github)\n    from the introduction course. Specifically, type in the RStudio\n    Console:\n\n    ``` r\n    # There will be a pop-up to type in your name (first and \n    # last), as well as your email\n    r3::setup_git_config()\n    ```\n\n2.  **Please read** through the [Version Control\n    lesson](https://r-cubed-intro.rostools.org/sessions/version-control.html)\n    of the introduction course. *You don't need to do any of the\n    exercises or activities*, but you are welcome to do them if it will\n    help you learn or understand it better. For most of the course, we\n    will be using Git as shown in the [Using Git in\n    RStudio](https://r-cubed-intro.rostools.org/sessions/version-control.html#using-git-in-rstudio)\n    section. During the course, we will connect our projects to GitHub,\n    which is described in the [Synchronizing with\n    GitHub](https://r-cubed-intro.rostools.org/sessions/version-control.html#synchronizing-with-github)\n    section.\n\nRegardless of whether you've done the steps above or not, *everyone*\nneeds to run:\n\n``` r\nr3::check_setup()\n```\n\nThe output you'll get for success will look something like this:\n\n```         \nChecking R version:\n✔ Your R is at the latest version of 4.3.1!\nChecking RStudio version:\n✔ Your RStudio is at the latest version of 2023.6.0.421!\nChecking Git config settings:\n✔ Your Git configuration is all setup!\n  Git now knows that:\n  - Your name is 'Luke W. Johnston'\n  - Your email is 'lwjohnst@gmail.com'\n```\n\n**Eventually you will need to copy and paste the output into one of the\nsurvey questions**. *Note* that while GitHub is a natural connection to\nusing Git, given the limited time available, we will only be going over\naspects of GitHub that relate to storing your project Git repository and\nworking together. If you want to learn more about using GitHub, check\nout the\n[session](https://r-cubed-intro.rostools.org/sessions/version-control.html)\non it in the introduction course.\n\n## Connect with GitHub {#sec-connect-github}\n\nBecause we'll be pushing and pulling to GitHub throughout the course, as\nwell as using GitHub to collaborate with others in the project work, you\nneed to setup your computer to connect with GitHub. Read through and\ncomplete the tasks in the section [*authenticating with GitHub* of the\n*Connect to GitHub*\nGuide](https://guides.rostools.org/connect-github#authenticating-with-github)\n\n## Create an R Project {#sec-create-project}\n\nOne of the basic steps to reproducibility and modern workflows in data\nanalysis is to keep everything contained in a single location. In\nRStudio, this is done with R Projects. Please read all of [this\nsection](https://r-cubed-intro.rostools.org/sessions/project-management.html#what-is-a-project-and-why-use-it)\nfrom the introduction course to learn about R Projects and how they help\nkeep things self-contained. *You don't need to do any of the exercises\nor activities*.\n\nThere are several ways to organise a project folder. We'll be using the\nstructure from the package\n[prodigenr](https://rostools.github.io/prodigenr/). The project setup\ncan be done by either:\n\n1.  Using RStudio's New Project menu item: \"File -\\> New Project -\\> New\n    Directory\", scroll down to \"Scientific Analysis Project using\n    prodigenr\" and name the project \"AdvancedR3\" in the Directory Name,\n    saving it to the \"Desktop\" with Browse. **Note**: You might need to\n    restart RStudio if you don't see this option.\n2.  Or, running the command\n    `prodigenr::setup_project(\"~/Desktop/AdvancedR3\")` (or other\n    location like `Documents`) in the R Console and manually switching\n    to it using: `File -> Open Project` and navigating to the project\n    location.\n\n\n\n\n::: {.cell layout-align=\"center\"}\n\n:::\n\n\n\n\nWhen the RStudio Project opens up again, run these commands in the R\nConsole to finish the setup:\n\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# Add Git to the project\nprodigenr::setup_with_git()\n# Create a `functions.R` file in the `R/` folder\nusethis::use_r(\"functions\", open = FALSE)\n# Ignore this file that gets created by some usethis functions\nusethis::use_git_ignore(\".Rbuildignore\")\n# Set some project options to start fresh each time\nusethis::use_blank_slate(\"project\")\n```\n:::\n\n::: {.cell layout-align=\"center\"}\n\n:::\n\n\n\n\nHere we use the `{usethis}` package to help set things up. `{usethis}`\nis an extremely useful package for managing R Projects and we highly\nrecommend checking it out more to see how you can use it in your own\nwork.\n\n## R Markdown and Quarto\n\nWe teach and use R Markdown/Quarto because it is one of the very first\nsteps to being reproducible and because it is a very powerful tool to\ndoing data analysis. You may have heard of or used R Markdown since\nwe've used it in both the introduction and intermediate courses.\nHowever, you might not have heard of or used Quarto.\n\nQuarto is a next generation version of R Markdown and chances are, if\nyou use a fairly recent version of RStudio, you are already using it\nwithout realizing it. That's because Quarto uses the same Markdown\nsyntax as R Markdown. The only difference is that with Quarto, you can\ncreate more types of output documents (like books, websites, slides),\nyou have more options for customization, and it's easier to do and learn\nthan R Markdown. So, for this course, we will use Quarto to create a\nreport that includes the analysis we will do over the course.\n\nPlease do these two tasks:\n\n1.  Please read over the [R Markdown/Quarto\n    section](https://r-cubed-intro.rostools.org/sessions/reproducible-documents.html)\n    of the introduction course. If you use R Markdown or Quarto already,\n    you can skip this step.\n\n2.  In the R Console while inside the `AdvancedR3` project, run the\n    function to create a new Quarto file called `learning.qmd` in the\n    `doc/` folder.\n\n\n\n\n    ::: {.cell layout-align=\"center\"}\n    \n    ```{.r .cell-code}\n    r3::create_qmd_doc()\n    ```\n    :::\n\n::: {.cell layout-align=\"center\"}\n\n:::\n\n\n\n\n## Download the course data {#sec-download-data}\n\nWe're going to use a real world dataset to demonstrate the concepts in\nthis course. We're going to use an openly licensed dataset with\nmetabolomics data [@Herance2022].\n\nSimilar to the intermediate course, we will follow the principle of\nbuilding a reproducible pipeline, from raw data to the report on the\nanalysis. We'll also follow the principle of keeping the raw data *raw*\nand use code to tidy it up. The ultimate goal is to have a record of how\nwe *exactly* went from raw data to results in the paper. Unlike the\nintermediate course where you had to write through each step of the\nscript and what you needed to do, in this course you only need to copy\nand paste the code that will download and minimally process the dataset\ninto an initially workable state. If you want to learn more about how to\ntake a raw data set and process it into a format that is more suitable\nfor analysis, check out the [intermediate\ncourse](https://r-cubed-intermediate.rostools.org/).\n\nInside the `data-raw/` folder, we are going to write R code that\ndownloads a dataset, processes it into a more tidy format, and save it\ninto the `data/` folder. This is the start of our analysis pipeline.\nFirst step, we need to create the script to do these steps. While in\nyour `AdvancedR3` R Project, go to the Console pane in RStudio and type\nout:\n\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nusethis::use_data_raw(\"nmr-omics\")\n```\n:::\n\n\n\n\nWhat this function does is create a new folder called `data-raw/` and\ncreates an R script called `nmr-omics.R` in that folder. This is where\nwe will store the raw, original metabolomics data that we'll get from\nthe [website](https://zenodo.org/record/6597902). If you go to the\nwebsite with the dataset, you'll notice (when you scroll down) that\nthere are three files: A README file, a metabolomics `.xlsx` file, and a\nlipidomics `.xlsx` file. For now, we only want the README file and\nlipidomics dataset.\n\nThe R script should have opened up for you, otherwise, go into the\n`data-raw/` folder and open up the new `nmr-omics.R` script. The first\nthing to do is delete all the code in the script. Than, copy and paste\nthe code below into the script.\n\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# Load necessary packages -------------------------------------------------\n\nlibrary(readxl)\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(here)\n\n# Download dataset --------------------------------------------------------\n\n# From DOI: 10.5281/zenodo.6597902\n# Direct URL: https://zenodo.org/record/6597902\n\n# Get both README and the Lipidomics dataset.\nnmr_omics_dir <- here(\"data-raw/nmr-omics\")\nfs::dir_create(nmr_omics_dir)\n\ndownload.file(\"https://zenodo.org/record/6597902/files/README.txt\",\n  destfile = here(nmr_omics_dir, \"README.txt\")\n)\n\ndownload.file(\n  \"https://zenodo.org/record/6597902/files/NMR_Integration_Data_Lipidomics.xlsx\",\n  destfile = here(nmr_omics_dir, \"lipidomics.xlsx\"), mode = \"wb\"\n)\n\n# Wrangle dataset into tidy long format -----------------------------------\n\nlipidomics_full <- read_xlsx(\n  here(nmr_omics_dir, \"lipidomics.xlsx\"),\n  col_names = paste0(\"V\", 1:40)\n)\n\n# There are actually two sets of data in this dataset that we need to split:\n# - Lipidomic data\n# - Subject level data\n\n# Keep only lipidomic values\nlipidomics_only <- lipidomics_full %>%\n  # Want to remove columns 2, 3, and 4 since they are \"limits\"\n  # (we don't need them for this course)\n  select(-2:-4) %>%\n  # Remove the subject data rows\n  slice(-1:-4) %>%\n  mutate(across(-V1, as.numeric)) %>%\n  # Make it so the metabolite values are all in one column,\n  # which will make it easier to join with the subject data later.\n  pivot_longer(-V1) %>%\n  rename(metabolite = V1)\n\n# Keep only subject data\nsubject_only <- lipidomics_full %>%\n  # Remove the first metabolic name and limit columns,\n  # don't need for this\n  select(-1:-3) %>%\n  # Keep only the subject data raw\n  slice(1:4) %>%\n  pivot_longer(cols = -V4) %>%\n  pivot_wider(names_from = V4, values_from = value) %>%\n  # There is a weird \"​\" before some of the numbers, so we have\n  # extract just the number first before converting to numeric.\n  mutate(Age = as.numeric(stringr::str_extract(Age, \"\\\\d+\"))) %>%\n  rename_with(snakecase::to_snake_case)\n\nlipidomics <- full_join(\n  subject_only,\n  lipidomics_only\n) %>%\n  # Don't need anymore\n  select(-name)\n\n# Save to `data/` ---------------------------------------------------------\n\nreadr::write_csv(lipidomics, here::here(\"data/lipidomics.csv\"))\n```\n:::\n\n::: {.cell layout-align=\"center\"}\n\n:::\n\n\n\n\nSince this is an advanced course, you can run the lines one at a line\nand see what they do on your own (or `source()` them all at once). The\ncomments provided give guidance on what the code is doing and why. In\nthe end, though, the only important thing is to run all the code and get\nthe `lipidomics` dataset to be saved as `data/lipidomics.csv`. The\ncreated files should look like this:\n\n\n\n\n::: {.cell layout-align=\"center\"}\n\n:::\n\n\n\n\n``` text\nAdvancedR3\n├── data\n│   └── lipidomics.csv\n└── data-raw\n    ├── nmr-omics\n    │   ├── README.txt\n    │   └── lipidomics.xlsx\n    └── nmr-omics.R\n```\n\nAnd the created dataset in `data/lipidomics.csv` should look like (using\n`readr::read_csv()`):\n\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nlipidomics <- readr::read_csv(here::here(\"data/lipidomics.csv\"))\nlipidomics\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n#> # A tibble: 504 × 6\n#>    code   gender   age class metabolite                value\n#>    <chr>  <chr>  <dbl> <chr> <chr>                     <dbl>\n#>  1 ERI109 M         25 CT    TMS (interntal standard) 208.  \n#>  2 ERI109 M         25 CT    Cholesterol               19.8 \n#>  3 ERI109 M         25 CT    Lipid CH3- 1              44.1 \n#>  4 ERI109 M         25 CT    Lipid CH3- 2             147.  \n#>  5 ERI109 M         25 CT    Cholesterol               27.2 \n#>  6 ERI109 M         25 CT    Lipid -CH2-              587.  \n#>  7 ERI109 M         25 CT    FA -CH2CH2COO-            31.6 \n#>  8 ERI109 M         25 CT    PUFA                      29.0 \n#>  9 ERI109 M         25 CT    Phosphatidylethanolamine   6.78\n#> 10 ERI109 M         25 CT    Phosphatidycholine        41.7 \n#> # ℹ 494 more rows\n```\n\n\n:::\n:::\n\n\n\n\nTake a look through the downloaded `data-raw/nmr-omics/README.txt` and\n`data-raw/nmr-omics/lipidomics.xlsx` files, as well as the created\n`data/lipidomics.csv` to begin better understanding the dataset.\n\nWe are using Git to track changes made to files in our project. The\noriginal metabolomics dataset is stored on Zenodo, so we don't actually\nneed to keep the raw data files in our Git history. So let's tell Git to\nignore the files created in the `data-raw/nmr-omics/` folder. In the\nConsole, type out the code below. You only need to do this once.\n\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nusethis::use_git_ignore(\"data-raw/nmr-omics/\")\n```\n:::\n\n::: {.cell layout-align=\"center\"}\n\n:::\n\n\n\n\n``` r\nr3::check_project_setup_advanced()\n```\n\n``` text\nShow folders and files of project:\n• Please copy and paste this output into the survey question:\n/home/luke/Desktop/AdvancedR3\n├── AdvancedR3.Rproj\n├── DESCRIPTION\n├── R\n│   ├── README.md\n│   └── functions.R\n├── README.md\n├── TODO.md\n├── data\n│   ├── README.md\n│   └── lipidomics.csv\n├── data-raw\n│   ├── README.md\n│   ├── nmr-omics\n│   │   ├── README.txt\n│   │   └── lipidomics.xlsx\n│   └── nmr-omics.R\n└── doc\n    ├── README.md\n    ├── learning.qmd\n    └── report.Rmd\n```\n\nThe output should look something a bit like the above text. If it\ndoesn't, start over by deleting everything in the `data-raw/` folder\n*except* for the `data-raw/nmr-omics.R` script and re-running the script\nagain. If your output looks a bit like the above, than copy and paste\nthe output into the survey question at the end.\n\n## Set some quality of life options {#sec-quality-of-life}\n\nSome of the most common \"issues\" we encounter in the course when it\ncomes to Git are caused by files not being saved so the changes can't be\nseen by Git. To help with this, we suggest turning on some options in\nRStudio. While, there are many options inside the Global Options in\nRStudio that can help you work better and faster, the two we want you to\nto use will help you and us out during the course:\n\n-   Go into `Tools -> Global Options -> Code -> Saving`.\n    -   Under the heading \"General\", tick on all of those check boxes.\n    -   Under the heading \"Auto-save\", tick on both those check boxes.\n\n## Course introduction {#sec-course-details}\n\nMost of the course description is found in the syllabus (@sec-syllabus).\nIf you haven't read it, **please read it now**. Read over what the\ncourse will cover, what we expect you to learn at the end of it, and\nwhat our basic assumptions are about who you are and what you know. The\nfinal pre-course task is to complete a survey that asks if you've read\nit and if it matches you.\n\nOne goal of the course is to teach about open science, and true to our\nmission, we practice what we preach. The course material is publicly\naccessible (all on this website) and [openly\nlicensed](/index.qmd#licensing) so you can use and re-use it for free!\nThe material and table of contents on the side is listed in the order\nthat we will cover in the course.\n\nWe have a [Code of Conduct](https://guides.rostools.org/conduct.html).\nIf you haven't read it, **read it now**. The survey at the end will ask\nabout Conduct. We want to make sure this course is a supportive and safe\nenvironment for learning, so this Code of Conduct is important.\n\nYou're almost done. Please fill out the [**pre-course\nsurvey**](https://docs.google.com/forms/d/e/1FAIpQLSfzTLrLFyQHj79YGaCQDN5fUZ_9et1qdmtDGiq6gNPGzFSCyQ/viewform?usp=sf_link)\nto finish this assignment.\n\nSee you at the course!\n",
    "supporting": [
      "pre-course_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}