# Extras

-   Optional: Maybe talk about Git remotes when collaborating? Eg, set
    up remote on server? through gert?
    -   As a side aspect, appendix?
    -   mention pr\_ helpers?
-   One exercise could be to do the same thing but with the larger
    lipidomics dataset.
-   Precommits
    -   exercise: copy and paste wrong code. Try to add and commit to
        Git history.
-   PR helpers with usethis?
-   reprex?

## Saving intermediate analysis outputs

Sometimes you may want a pipeline target to save the output to a file so
you can save it to the Git history, like saving a figure, rather than
store the result in the `_targets/` folder. To save outputs of a target
outside of the `_targets/` folder, there are a few specific things we
have to do.

First, let's write some code to create the plots for our items 2 and 3
that we initially decided at the start of this session. Since we're
using `{ggplot2}` to write this code, let's add it to our `DESCRIPTION`
file.

```{r add-ggplot2-deps}
#| purl: true
use_package("ggplot2")
```

Next, we'll write the code to create item 2: The bar plot of the counts
of `gender` and `class`. We'll keep it simple for now. Because the data
is structured in a long format, we need to trim it down to only the
unique cases of `code`, `gender`, and `class` with `distinct()`. Then we
can make the bar plot. We'll use `position = "dodge"` for the bars to be
side by side, rather than stacked.

```{r bar-plot-gender-class}
#| eval: true
gender_by_class_plot <- lipidomics |>
  distinct(code, gender, class) |>
  ggplot(aes(x = class, fill = gender)) +
  geom_bar(position = "dodge")
gender_by_class_plot
```

Since we want to save this plot to a file, we'll use `ggsave()` to save
it to a new folder called `images/`.

```{r bar-plot-gender-class-to-file}
ggsave(here::here("images/gender-by-class.png"), gender_by_class_plot)
```

Next, let's do item 3, the distribution of each metabolite. Here we'll
use `geom_histogram()`, nothing too fancy. And since the data is already
in long format, we can easily use `facet_wrap()` to create a plot for
each metabolite. Like with the plot above, let's save it to a file. We
use `scales = "free"` because each metabolite doesn't have the same
range of values (some are small, others are quite large).

```{r histogram-metabolites}
#| eval: true
metabolite_distribution_plot <- ggplot(lipidomics, aes(x = value)) +
  geom_histogram() +
  facet_wrap(vars(metabolite), scales = "free")
metabolite_distribution_plot
```

And then save it.

```{r histogram-metabolites-save}
ggsave(
  here::here("images/metabolite-distribution.png"),
  metabolite_distribution_plot
)
```
